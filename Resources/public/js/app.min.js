/*
 * This file is part of the RIFilemanagerBundle package.
 *
 * (c) Rafal Ignaszewski <https://github.com/qjon>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
"use strict";angular.module("riSpinner",[]),angular.module("riSpinner").directive("spinner",["SpinnerService",function(SpinnerService){return{restrict:"A",replace:!0,templateUrl:"/templates/modules/spinner.html",link:function(scope){scope.spinnerService=SpinnerService}}}]),angular.module("riSpinner").service("SpinnerService",function(){var isActive=!1;return{show:function(){isActive=!0},hide:function(){isActive=!1},isShow:function(){return isActive}}}),function(){var filemanager;filemanager=function(){function filemanager(){return["mgcrea.ngStrap","riSpinner","ngRoute","ngAnimate","flow","templates","pascalprecht.translate"]}return filemanager}(),angular.module("filemanager",new filemanager)}.call(this),function(){var Configuration;Configuration=function(){function Configuration($provide,flowFactoryProvider,$routeProvider,$translateProvider){$translateProvider.useStaticFilesLoader({prefix:"/bundles/rifilemanager/translations/lang_",suffix:".json"}),$translateProvider.preferredLanguage("en_EN"),$translateProvider.useSanitizeValueStrategy(null),$routeProvider.when("/dir/:dirId",{templateUrl:"/templates/main.html",controller:"mainController as mainCtrl",resolve:{dir:["dirStructureService","$route",function(dirStructureService,$route){return dirStructureService.load($route.current.params.dirId)}]}}).otherwise({redirectTo:"/dir/0"}),flowFactoryProvider.defaults={target:Routing.generate("ri_filemanager_api_file_upload"),uploadMethod:"POST",permanentErrors:[404,500,501],testChunks:!1,progressCallbacksInterval:0,speedSmoothingFactor:1,chunkSize:67108864,forceChunkSize:!1},$provide.decorator("flowImgDirective",function($delegate){var directive;return directive=$delegate[0],directive.require="",$delegate})}return Configuration}(),angular.module("filemanager").config(["$provide","flowFactoryProvider","$routeProvider","$translateProvider",Configuration])}.call(this),function(){var fileMime;fileMime=function(){function fileMime(){return function(filesList,fileMimeTypesList){var files;return files=[],"undefined"==typeof fileMimeTypesList||0===fileMimeTypesList.length?filesList:(filesList.forEach(function(file){return fileMimeTypesList.indexOf(file.mime)>-1?files.push(file):void 0}),files)}}return fileMime}(),angular.module("filemanager").filter("fileMime",[fileMime])}.call(this),function(){var Crop;Crop=function(){function Crop($timeout,configProvider){return{restrict:"A",replace:!0,scope:{file:"="},link:function(scope,element){var timef;scope.$on("ImageCrop:changeSize",function(event,size){element.cropper("setData",size),element.cropper("setAspectRatio",size.width/size.height)}),timef=function(){var firstDimension;firstDimension=configProvider.availableDimensions[0],element.cropper({aspectRatio:firstDimension.width/firstDimension.height,data:{width:firstDimension.width,height:firstDimension.height},modal:!0,minWidth:firstDimension.width,minHeight:firstDimension.height,resizeable:!0,done:function(data){scope.file.setCropData(data.x,data.y,data.width,data.height)}})},$timeout(timef,500)}}}return Crop}(),angular.module("filemanager").directive("crop",["$timeout","configProvider",Crop])}.call(this),function(){var DirObj;DirObj=function(){function DirObj($http,modalService,SpinnerService,urlService){var parent,structure;return parent=null,structure=null,DirObj=function(){function DirObj(data,parentDir,dirStructure){parent=parentDir,structure=dirStructure,this.dirs=[],this.files=[],this._setData(data)}return DirObj.prototype._setData=function(data){return angular.extend(this,data)},DirObj.prototype.getSubDir=function(id){return _.find(this.dirs,{id:id})},DirObj.prototype.getParentDir=function(){return parent},DirObj.prototype.getDirStructure=function(){return structure},DirObj.prototype.openDialogEditFolder=function(event){return modalService.open(event,"/templates/dir_edit.html",{dir:this})},DirObj.prototype.openDialogRemoveFolder=function(event){return modalService.open(event,"/templates/dir_remove.html",{dir:this})},DirObj.prototype.remove=function(callbackSuccess,callbackError){var url;return SpinnerService.show(),url=urlService.generate("ri_filemanager_api_directory_remove",{id:this.id}),$http["delete"](url).success(function(_this){return function(data){return data.error?callbackError&&callbackError(data.error):(_.remove(_this.getDirStructure().currentDir.dirs,{id:parseInt(_this.id)}),callbackSuccess&&callbackSuccess()),SpinnerService.hide()}}(this)).error(function(data){return callbackError&&callbackError(data.error),SpinnerService.hide()})},DirObj.prototype.save=function(name,callbackSuccess,callbackError){var url;return SpinnerService.show(),url=urlService.generate("ri_filemanager_api_directory_edit",{id:this.id}),$http.put(url,{name:name}).success(function(_this){return function(){return _this.name=name,SpinnerService.hide(),callbackSuccess?callbackSuccess(_this):void 0}}(this)).error(function(data){return callbackError&&callbackError(data.error),SpinnerService.hide()})},DirObj}()}return DirObj}(),angular.module("filemanager").factory("DirObj",["$http","modalService","SpinnerService","urlService",DirObj])}.call(this),function(){var DirStructure;DirStructure=function(){function DirStructure($q,$http,DirObj,FileObj,SpinnerService,urlService){this.currentDir=!1,this.$q=$q,this.$http=$http,this.dirObj=DirObj,this.fileObj=FileObj,this.spinnerService=SpinnerService,this.url=urlService}return DirStructure.prototype.addFolder=function(name,callbackSuccess,callbackError){var request,url;return this.spinnerService.show(),url=this.url.generate("ri_filemanager_api_directory_add"),request=this.$http.post(url,{dir_id:this.currentDir.id,name:name}),request.success(function(_this){return function(data){var dir;return dir=new _this.dirObj(data,_this.currentDir,_this),_this.currentDir.dirs.push(dir),_this.spinnerService.hide(),callbackSuccess&&callbackSuccess(dir),data}}(this)),request.error(function(_this){return function(data){return _this.spinnerService.hide(),callbackError&&callbackError(data),data}}(this))},DirStructure.prototype.getFileById=function(id){return _.find(this.currentDir.files,{id:parseInt(id)})},DirStructure.prototype.getSubDirById=function(id){return _.find(this.currentDir.dirs,{id:parseInt(id)})},DirStructure.prototype.load=function(dirId){var defer,url;return defer=this.$q.defer(),this.currentDir!==!1&&parseInt(dirId,10)===this.currentDir.id?this:(url=this.url.generate("ri_filemanager_api_index",{id:dirId}),this.spinnerService.show(),this.$http.get(url).success(function(_this){return function(data){var currentDir,dirs,files;currentDir=new _this.dirObj(data),dirs=[],files=[],currentDir.parentId=data.parent_id,currentDir.dirs=[],currentDir.files=[],data.dirs.forEach(function(dirData){dirs.push(new _this.dirObj(dirData,_this.currentDir,_this))}),data.files.forEach(function(fileData){files.push(new _this.fileObj(fileData,_this.currentDir,_this))}),_this.currentDir=currentDir,angular.copy(dirs,currentDir.dirs),angular.copy(files,currentDir.files),defer.resolve(_this),_this.spinnerService.hide()}}(this)),defer.promise)},DirStructure.prototype.reload=function(){var dirId;return dirId=this.currentDir.id,this.currentDir.id=null,this.load(dirId)},DirStructure}(),angular.module("filemanager").service("dirStructureService",["$q","$http","DirObj","FileObj","SpinnerService","urlService",DirStructure])}.call(this),function(){var FileObj;FileObj=function(){function FileObj($http,modalService,fileTypesService,fileIconsService,SpinnerService,urlService){var structure;return structure=null,FileObj=function(){function FileObj(data,dir,dirStructure){structure=dirStructure,this.dir=dir,this.image=!1,this.icon=!1,this.cropData={},this._resetCropData(),this._setData(data)}return FileObj.prototype._resetCropData=function(){return this.cropData.x=0,this.cropData.y=0,this.cropData.width=0,this.cropData.height=0},FileObj.prototype._setData=function(data){angular.extend(this,data),this.image=fileTypesService.hasTypeGetMime("images",this.mime),this.image||(this.icon=fileIconsService.getIconPath(this.src))},FileObj.prototype.crop=function(){var url;return this.cropData.width>0&&this.cropData.height>0?(url=urlService.generate("ri_filemanager_api_file_edit",{id:this.id}),$http.put(url,{id:this.id,x:this.cropData.x,y:this.cropData.y,width:this.cropData.width,height:this.cropData.height}).success(function(_this){return function(response){response.success&&(_this.width=_this.cropData.width,_this.height=_this.cropData.height,_this.src=_this.src+"?"+(new Date).getTime(),_this._resetCropData())}}(this))):void 0},FileObj.prototype.getDirStructure=function(){return structure},FileObj.prototype.isImage=function(){return this.image},FileObj.prototype.openRemoveDialog=function(event){return modalService.open(event,"/templates/file_remove.html",{file:this})},FileObj.prototype.openEditDialog=function(event){return modalService.open(event,"/templates/file_edit.html",{file:this})},FileObj.prototype.remove=function(callbackSuccess,callbackError){var fileId,url;return fileId=this.id,SpinnerService.show(),url=urlService.generate("ri_filemanager_api_file_delete",{id:fileId}),$http["delete"](url).success(function(_this){return function(data){data.error?callbackError&&callbackError(data):(_.remove(_this.getDirStructure().currentDir.files,{id:parseInt(fileId)}),callbackSuccess&&callbackSuccess()),SpinnerService.hide()}}(this)).error(function(data){SpinnerService.hide(),callbackError&&callbackError(data)})},FileObj.prototype.setCropData=function(x,y,width,height){return this.cropData.x=x,this.cropData.y=y,this.cropData.width=width,this.cropData.height=height,this},FileObj.prototype.toJSON=function(){return{name:this.name,src:this.src,width:this.width,height:this.height,mime:this.mime,image:this.isImage}},FileObj}()}return FileObj}(),angular.module("filemanager").factory("FileObj",["$http","modalService","fileTypesService","fileIconsService","SpinnerService","urlService",FileObj])}.call(this),function(){var Callback;Callback=function(){function Callback(configProvider){this.configProvider=configProvider}return Callback.prototype.isFileCallback=function(){return!this.configProvider.standAlone&&angular.isFunction(this.configProvider.filesSelectCallback)},Callback.prototype.fileCallback=function(event,file){var filesData;filesData=[],event.stopPropagation(),this.isFileCallback()&&(angular.isArray(file)?file.forEach(function(f){filesData.push(f.toJSON())}):filesData.push(file.toJSON()),this.configProvider.filesSelectCallback(filesData))},Callback.prototype.isFolderCallback=function(){return!this.configProvider.standAlone&&angular.isFunction(this.configProvider.dirSelectCallback)},Callback.prototype.folderCallback=function(event,dir){event.stopPropagation(),this.isFolderCallback()&&this.configProvider.dirSelectCallback(dir)},Callback}(),angular.module("filemanager").service("callbackService",["configProvider",Callback])}.call(this),function(){var CopyPaste;CopyPaste=function(){function CopyPaste($http,modalService,selectionService,dirStructureService,SpinnerService,urlService){this.actionType=0,this.$http=$http,this.modalService=modalService,this.selectionService=selectionService,this.dirStructure=dirStructureService,this.spinnerService=SpinnerService,this.url=urlService}return CopyPaste.prototype.doAction=function(destDirId){switch(this.actionType){case 1:return this.move(destDirId);case 2:return this.copy(destDirId)}},CopyPaste.prototype.setActionType=function(type){if(type===this.actionType)return this.actionType=0;switch(type){case 1:case 2:return this.actionType=type;default:return this.actionType=0}},CopyPaste.prototype.isCutSelected=function(){return 1===this.actionType},CopyPaste.prototype.isCopySelected=function(){return 2===this.actionType},CopyPaste.prototype.isNotSelected=function(){return 0===this.actionType},CopyPaste.prototype.setCut=function(){return this.setActionType(1)},CopyPaste.prototype.setCopy=function(){return this.setActionType(2)},CopyPaste.prototype.copy=function(destFolderId){return this.spinnerService.show(),this.$http.put(this.url.generate("ri_filemanager_api_copy_selection"),{destDirId:destFolderId,files:this.selectionService.getFilesIds(),dirs:this.selectionService.getFoldersIds()},{headers:{"X-Requested-With":"XMLHttpRequest"}}).then(function(_this){return function(response){return _this.responseCallbackFunction(response.data)}}(this))},CopyPaste.prototype.openRemoveDialog=function($event){return this.modalService.open($event,"/templates/selection_remove.html",{dirs:this.selectionService.getFolders(),files:this.selectionService.getFiles()})},CopyPaste.prototype.remove=function(callback){return this.spinnerService.show(),this.$http.put(this.url.generate("ri_filemanager_api_delete_selection"),{files:this.selectionService.getFilesIds(),dirs:this.selectionService.getFoldersIds()},{headers:{"X-Requested-With":"XMLHttpRequest"}}).then(function(_this){return function(response){return _this.responseCallbackFunction(response.data)}}(this)),callback()},CopyPaste.prototype.move=function(destFolderId){return this.spinnerService.show(),this.$http.put(this.url.generate("ri_filemanager_api_move_selection"),{destDirId:destFolderId,files:this.selectionService.getFilesIds(),dirs:this.selectionService.getFoldersIds()},{headers:{"X-Requested-With":"XMLHttpRequest"}}).then(function(_this){return function(response){return _this.responseCallbackFunction(response.data)}}(this))},CopyPaste.prototype.responseCallbackFunction=function(response){return this.spinnerService.hide(),response.success&&this.dirStructure.reload(),this.selectionService.clear(),this.setActionType(0)},CopyPaste}(),angular.module("filemanager").service("copyPasteService",["$http","modalService","selectionService","dirStructureService","SpinnerService","urlService",CopyPaste])}.call(this),function(){var FileIcons;FileIcons=function(){function FileIcons(configProvider){this.configProvider=configProvider,this.imagesExtensions=["aac","ai","aiff","avi","_blank","bmp","c","cpp","css","dat","dmg","doc","dotx","dwg","dxf","eps","exe","flv","gif","h","hpp","html","ics","iso","java","jpg","js","key","less","mid","mp3","mp4","mpg","odf","ods","odt","otp","ots","ott","_page","pdf","php","png","ppt","psd","py","qt","rar","rb","rtf","sass","scss","sql","tga","tgz","tiff","txt","wav","xls","xlsx","xml","yml","zip"]}return FileIcons.prototype.getIconPath=function(fileName){var ext;return ext=fileName.substr(_.lastIndexOf(fileName,".")+1),this.imagesExtensions.indexOf(ext)>-1?this.configProvider.fileIconTypesDir+ext+".png":this.configProvider.fileIconTypesDir+this.configProvider.blankIconType},FileIcons}(),angular.module("filemanager").service("fileIconsService",["configProvider",FileIcons])}.call(this),function(){var FileTypeFilter;FileTypeFilter=function(){function FileTypeFilter(fileTypesService){this.fileTypeFilter=!1,this.fileTypesService=fileTypesService}return FileTypeFilter.prototype.clearFilter=function(){return this.fileTypeFilter=!1},FileTypeFilter.prototype.getFilterName=function(){return this.fileTypeFilter},FileTypeFilter.prototype.getCurrentFilterMimeList=function(){return this.fileTypesService.getType(this.fileTypeFilter)},FileTypeFilter.prototype.isActiveFilter=function(name){return name===this.fileTypeFilter},FileTypeFilter.prototype.setFilterName=function(filterName){return filterName&&filterName!==!1&&this.fileTypesService.isDefinedType(filterName)?this.fileTypeFilter=filterName:this.clearFilter(),this},FileTypeFilter}(),angular.module("filemanager").service("fileTypeFilterService",["fileTypesService",FileTypeFilter])}.call(this),function(){var FileTypes;FileTypes=function(){function FileTypes(configProvider){this.types=configProvider.mimeTypes}return FileTypes.prototype.getTypes=function(){return this.types},FileTypes.prototype.getType=function(name){return this.types[name]||[]},FileTypes.prototype.hasTypeGetMime=function(name,mime){var mimesList;return mimesList=this.getType(name),mimesList.indexOf(mime)>-1},FileTypes.prototype.isDefinedType=function(name){return"undefined"!=typeof this.types[name]},FileTypes}(),angular.module("filemanager").service("fileTypesService",["configProvider",FileTypes])}.call(this),function(){var Upload;Upload=function(){function Upload(modalService,dirStructureService,FileObj,fileIconsService){this.$flow=null,this.modalDialog=null,this.dirStructureService=dirStructureService,this.fileObj=FileObj,this.fileIconService=fileIconsService,this.modalService=modalService,this.fileIconsService=fileIconsService}return Upload.prototype.getFlow=function(){return this.$flow},Upload.prototype.uploadProgress=function($flow,$file){$file.percent=Math.round(100*($file._prevUploadedSize/$file.size))},Upload.prototype.fileUploadComplete=function($flow,$file,response){var fileData,fileObj;fileData=angular.fromJson(response),$file.percent=100,$flow.files.splice($flow.files.indexOf($file),1),fileObj=new this.fileObj(fileData,this.dirStructureService.currentDir,this.dirStructureService),this.dirStructureService.currentDir.files.push(fileObj)},Upload.prototype.openUploadFileDialog=function(event,flow){return this.$flow=flow,this.modalDialog=this.modalService.open(event,"/templates/files_upload.html"),this},Upload.prototype.uploadFiles=function(){return this.$flow.upload(),this},Upload.prototype.hideAndClear=function(){return this.modalDialog.hide(),this.$flow.cancel(),this.$flow=void 0},Upload.prototype.isImage=function(flowFile){return 0===flowFile.file.type.indexOf("image")},Upload.prototype.getThumbnail=function(flowFile){var filenameSplitted;return filenameSplitted=flowFile.file.name.split("."),this.fileIconsService.getIconPath(filenameSplitted.pop())},Upload}(),angular.module("filemanager").service("uploadService",["modalService","dirStructureService","FileObj","fileIconsService",Upload])}.call(this),function(){var Config;Config=function(){function Config(){this.configData={standAlone:!0,fileIconTypesDir:"/bundles/rifilemanager/img/icons/",blankIconType:"_blank.png",mimeTypes:{images:["image/jpg","image/jpeg","image/png","image/gif","image/png"],audio:["audio/mpeg","audio/x-ms-wma","audio/vnd.rn-realaudio","audio/x-wav"],video:["video/mpeg","video/mp4","video/quicktime","video/x-ms-wmv"],archive:["application/zip"]},filesSelectCallback:function(files){var file,windowManager;file=files[0],windowManager=top.tinymce.activeEditor.windowManager,windowManager.getParams().oninsert(file),windowManager.close()},dirSelectCallback:null,availableDimensions:[{name:"Artykuł",width:750,height:300},{name:"Slider",width:1140,height:350}]}}return Config.prototype.setConfig=function(data){return angular.extend(this.configData,data)},Config.prototype.$get=function(){return this.configData},Config}(),angular.module("filemanager").provider("configProvider",[Config])}.call(this),function(){var Modal;Modal=function(){function Modal($rootScope,$modal){this.$rootScope=$rootScope,this.$modal=$modal}return Modal.prototype.open=function(event,template,scopeData){var scope;return scope=this.$rootScope.$new(!0),scopeData=scopeData||{},event.stopPropagation(),angular.extend(scope,scopeData),this.$modal({template:template,placement:"center",container:"#toppage",backdrop:!1,keyboard:!1,show:!0,scope:scope})},Modal}(),angular.module("filemanager").service("modalService",["$rootScope","$modal",Modal])}.call(this),function(){var RoutingChange;RoutingChange=function(){function RoutingChange($window,$location,dirStructureService){this.$window=$window,this.$location=$location,this.dirStructureService=dirStructureService}return RoutingChange.prototype.goToFolder=function(event,folderId){event.ctrlKey||this.$location.url("/dir/"+folderId)},RoutingChange.prototype.goToFolderUp=function(){this.dirStructureService.currentDir.id&&this.goToFolder({},this.dirStructureService.currentDir.parentId)},RoutingChange.prototype.downloadFile=function(file,event){event.stopPropagation(),this.$window.open(file.src)},RoutingChange}(),angular.module("filemanager").service("routingChangeService",["$window","$location","dirStructureService",RoutingChange])}.call(this),function(){var Selection;Selection=function(){function Selection(){}var files,folders;return folders=[],files=[],Selection.prototype.addFile=function(file){return files.push(file),this},Selection.prototype.getFileById=function(id){return _.find(files,{id:id})},Selection.prototype.getFiles=function(){return files},Selection.prototype.getFilesIds=function(){var ids;return ids=[],files.forEach(function(file){return ids.push(file.id)}),ids},Selection.prototype.isSelectedFile=function(id){var file;return file=this.getFileById(id),file?!0:!1},Selection.prototype.removeFile=function(id){var file,index;return file=this.getFileById(id),index=-1,file&&(index=files.indexOf(file),files.splice(index,1)),this},Selection.prototype.toggleFile=function(event,file){return event.preventDefault(),event.ctrlKey?this.isSelectedFile(file.id)?this.removeFile(file.id):this.addFile(file):void 0},Selection.prototype.addFolder=function(folder){return folders.push(folder),this},Selection.prototype.getFolders=function(){return folders},Selection.prototype.getFoldersIds=function(){var ids;return ids=[],folders.forEach(function(folder){return ids.push(folder.id)}),ids},Selection.prototype.getFolderById=function(id){return _.find(folders,{id:id})},Selection.prototype.isSelectedFolder=function(id){var folder;return folder=this.getFolderById(id),folder?!0:!1},Selection.prototype.deleteFolder=function(id){var folder,index;return folder=this.getFolderById(id),index=-1,folder&&(index=folders.indexOf(folder),folders.splice(index,1)),this},Selection.prototype.toggleFolder=function(event,folder){return event.stopPropagation(),event.ctrlKey&&(this.isSelectedFolder(folder.id)?this.deleteFolder(folder.id):this.addFolder(folder)),this},Selection.prototype.isEmptySelection=function(){return 0===folders.length&&0===files.length},Selection.prototype.clear=function(){return angular.copy([],files),angular.copy([],folders),this},Selection}(),angular.module("filemanager").service("selectionService",[Selection])}.call(this),function(){var Url;Url=function(){function Url(){return Routing}return Url}(),angular.module("filemanager").service("urlService",[Url])}.call(this),function(){var AddDir;AddDir=function(){function AddDir($scope,$timeout,dirStructureService){var timeoutCallback;this.dirStructure=dirStructureService,this.folderName="",this.scope=$scope,timeoutCallback=function(){return angular.element('input[name="folder_name"]').focus()},$timeout(timeoutCallback,200)}return AddDir.prototype.addFolder=function(){""!==this.folderName&&this.dirStructure.addFolder(this.folderName,this.scope.$hide)},AddDir}(),angular.module("filemanager").controller("addDirController",["$scope","$timeout","dirStructureService",AddDir])}.call(this),function(){var EditDir;EditDir=function(){function EditDir($scope,$timeout){var timeoutCallback;this.dir=$scope.dir,this.folderName=this.dir.name,this.orgName=this.folderName,timeoutCallback=function(){return angular.element('input[name="folder_name"]').focus()},$timeout(timeoutCallback,200)}return EditDir}(),angular.module("filemanager").controller("editDirController",["$scope","$timeout",EditDir])}.call(this),function(){var EditFile;EditFile=function(){function EditFile($scope,configProvider){this.$scope=$scope,this.sizeList=configProvider.availableDimensions,this.size=this.sizeList[0]}return EditFile.prototype.isSize=function(size){return size===this.size},EditFile.prototype.setSize=function(size){this.size=size,this.$scope.$broadcast("ImageCrop:changeSize",this.size)},EditFile}(),angular.module("filemanager").controller("editFileController",["$scope","configProvider",EditFile])}.call(this),function(){var FileUpload;FileUpload=function(){function FileUpload($scope,uploadService){this.$scope=$scope,this.fileUploadService=uploadService}return FileUpload}(),angular.module("filemanager").controller("fileUploadController",["$scope","uploadService",FileUpload])}.call(this),function(){var Main;Main=function(){function Main($scope,dirStructureService,fileTypesService,fileTypeFilterService,routingChangeService,selectionService,copyPasteService,uploadService,callbackService,$translate){this.$scope=$scope,this.dirStructure=dirStructureService,this.fileTypeFilter=fileTypeFilterService,this.fileTypes=fileTypesService,this.routingChangeService=routingChangeService,this.$translate=$translate,this.selection=selectionService,this.copyPaste=copyPasteService,this.fileUploadService=uploadService,this.callbackService=callbackService,this.search=""}return Main.prototype.setLanguage=function(lang){return this.$translate.use(lang)},Main.prototype.getLanguageSymbol=function(){var lang;return lang=this.$translate.use(),"pl_PL"===lang?"PL":"EN"},Main}(),angular.module("filemanager").controller("mainController",["$scope","dirStructureService","fileTypesService","fileTypeFilterService","routingChangeService","selectionService","copyPasteService","uploadService","callbackService","$translate",Main])}.call(this),function(){var RemoveDir,bind=function(fn,me){return function(){return fn.apply(me,arguments)}};RemoveDir=function(){function RemoveDir($scope,dirStructureService){this.showAlert=bind(this.showAlert,this),this.$scope=$scope,this.removedDir=$scope.dir,this.dirStructure=dirStructureService,this.errorString=""}return RemoveDir.prototype.showAlert=function(responseData){this.errorString=responseData.message},RemoveDir}(),angular.module("filemanager").controller("removeDirController",["$scope","dirStructureService",RemoveDir])}.call(this),function(){var RemoveFile;RemoveFile=function(){function RemoveFile($scope){this.$scope=$scope,this.file=$scope.file,this.errorString=""}return RemoveFile.prototype.showAlert=function(responseData){this.errorString=responseData.message},RemoveFile}(),angular.module("filemanager").controller("removeFileController",["$scope",RemoveFile])}.call(this),function(){var SelectionRemove;SelectionRemove=function(){function SelectionRemove($scope,copyPasteService){this.$scope=$scope,this.files=$scope.files,this.dirs=$scope.dirs,this.errorString="",this.copyPasteService=copyPasteService}return SelectionRemove.prototype.showAlert=function(responseData){this.errorString=responseData.message},SelectionRemove}(),angular.module("filemanager").controller("selectionRemoveController",["$scope","copyPasteService",SelectionRemove])}.call(this);